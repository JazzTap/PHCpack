Polynomial evaluation and differentiation algorithms in PHCv2.3.90.

This directory was created new in v2.3.69, collecting the former nested 
Horner scheme algorithms of the directory polynomials, and with the new
evaluation and differentiation algorithms based on the Speelpenning example,
developed jointly with Genady Yoffe.

The nested Horner scheme is implemented for fixed and parametric
coefficients for use in coefficient parameter homotopies.
The flattened representation was developed in collaboration with Genady Yoffe
and used in our first multithreaded polynomial evaluation algorithms,
presented at PASCO 2010.  The latest algorithms based on Speelpenning's
example have not yet been extended for Laurent polynomials.

Since the different ways to evaluate polynomials use different orders of
computation, the results may differ when mixed-precision arithmetic is used.

-------------------------------------------------------------------------------
file name                         : short description
-------------------------------------------------------------------------------
generic_polynomial_functions      : evaluation of polynomials
generic_laur_poly_functions       : evaluation of Laurent polynomials
generic_poly_system_functions     : evaluation of systems of polynomials
generic_laur_system_functions     : evaluation of Laurent polynomial systems
-------------------------------------------------------------------------------
standard_complex_poly_functions   : generic_polynomial_functions instantiated
standard_floating_poly_functions  : polynomial functions for standard floats
standard_complex_laur_functions   : generic_laur_poly_functions instantiated
standard_complex_poly_sysfun      : generic_poly_system_function instantiated
standard_floating_poly_sysfun     : systems of real polynomial functions
double_double_poly_functions      : double double polynomial functions
dobldobl_complex_poly_functions   : complex double double polynomial functions
dobldobl_complex_laur_functions   : complex double double Laurent functions
dobldobl_complex_laur_sysfun      : double double Laurent system functions
quad_double_poly_functions        : quad double polynomial functions
quaddobl_complex_poly_functions   : complex quad double polynomial functions
quaddobl_complex_poly_sysfun      : quad double polynomial system functions
quaddobl_complex_laur_functions   : complex quad double Laurent functions
quaddobl_complex_laur_sysfun      : quad double Laurent system functions
multprec_complex_poly_functions   : evaluating multprec complex polynomials
multprec_floating_poly_functions  : evaluating multprec floating polynomials
multprec_complex_poly_sysfun      : evaluating multprec complex poly systems
multprec_floating_poly_sysfun     : evaluating multprec floating poly systems
standard_evaluator_packages       : create package to evaluate systems
-------------------------------------------------------------------------------
exponent_vectors                  : management of exponents of a system
lexicographical_supports          : supports in lexicographic increasing order
standard_polynomial_flatteners    : flattened representation of standard system
dobldobl_polynomial_flatteners    : flattened representation of dobldobl system
quaddobl_polynomial_flatteners    : flattened representation of quaddobl system
-------------------------------------------------------------------------------
standard_speelpenning_products    : evaluate and differentiate variable product
dobldobl_speelpenning_products    : Speelpenning product with double doubles
quaddobl_speelpenning_products    : Speelpenning product with quad doubles
standard_monomial_evaluations     : evaluations of monomials
dobldobl_monomial_evaluations     : monomial evaluations with double doubles
quaddobl_monomial_evaluations     : monomial evaluations with quad doubles
standard_gradient_evaluations     : evaluation and gradient computation
dobldobl_gradient_evaluations     : double double gradient computation
quaddobl_gradient_evaluations     : quad double gradient computation
coefficient_supported_polynomials : support vector polynomial representations
standard_jacobian_evaluations     : evaluating and differentiation of systems
dobldobl_jacobian_evaluations     : double double eval & diff of systems
quaddobl_jacobian_evaluations     : quad double eval & diff of systems
-------------------------------------------------------------------------------
ts_evaline                        : calls the evaluator package
ts_evalpoly                       : development of nested Horner scheme
ts_expvec                         : test on exponent vector extraction
ts_polyflat                       : tests the flattening
ts_perfeval                       : performance testing on poly evaluation
ts_cffsup                         : test on coefficient supported polynomials
ts_speel                          : development of Speelpenning product
ts_speelsys                       : test on eval and diff of systems
ts_cycfun                         : on the cyclic n-roots problems
-------------------------------------------------------------------------------
